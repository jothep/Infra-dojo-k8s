---
- name: Download K3s installer script
  get_url:
    url: https://get.k8s.io
    dest: /tmp/k3s-install.sh
    mode: '0755'

- name: Run K3s installer script
  command: /tmp/k3s-install.sh
  args:
    creates: /usr/local/bin/k3s
  become: true
  environment:
    INSTALL_K3S_EXEC: "--docker"

- name: Get the installed K3s server version
  command: k3s --version
  register: k3s_version_output
  changed_when: false
  become: true

- name: Extract K3s version number for kubectl download
  set_fact:
    k3s_version: "{{ k3s_version_output.stdout | regex_search('v[0-9]+\\.[0-9]+\\.[0-9]+') }}"

- name: Determine system architecture for kubectl download
  set_fact:
    k8s_arch: "{{ 'arm64' if ansible_architecture == 'aarch64' else 'amd64' }}"

- name: Download the official kubectl binary matching the K3s version
  get_url:
    url: "https://dl.k8s.io/release/{{ k3s_version }}/bin/linux/{{ k8s_arch }}/kubectl"
    dest: "/usr/local/bin/kubectl"
    mode: '0755'
    owner: root
    group: root
  become: true

- name: Create .kube directory for the user
  file:
    path: "{{ ansible_env.HOME }}/.kube"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'

- name: Make the K3s kubeconfig file readable
  file:
    path: /etc/rancher/k3s/k3s.yaml
    mode: '0644'
  become: true

- name: Copy kubeconfig to user's .kube directory
  copy:
    src: /etc/rancher/k3s/k3s.yaml
    dest: "{{ ansible_env.HOME }}/.kube/config"
    remote_src: yes
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0600'
  become: true

- name: Print a completion message
  debug:
    msg:
      - "  K3s and official kubectl (version {{ k3s_version }}) have been successfully installed!"